{"version":3,"sources":["assets/scripts/pool-party.js","script.js","../../../.nvm/versions/node/v7.2.0/lib/node_modules/parcel-bundler/lib/builtins/bundle-url.js","../../../.nvm/versions/node/v7.2.0/lib/node_modules/parcel-bundler/lib/builtins/css-loader.js"],"names":["poolDealers","PoolParty","i","services","checkboxes","poolPartyPlanning","poolFilter","poolView","method","document","querySelectorAll","forEach","chk","checked","push","id","chx","addEventListener","event","console","log","indexOf","target","num","splice","cards","dealers","filtered","matchedArrays","arr1","arr2","match","word","includes","item","data","certifications","length","results","render","slice","innerHTML","name","phone1","window","poolParty","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","module"],"mappings":"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","file":"script.e0e5486e.map","sourceRoot":"..","sourcesContent":["import * as poolDealers from '../data/dealers.json';\n\nexport default class PoolParty {\n\n    constructor(i) {\n        // this.items = i;\n        this.services = [];\n        this.checkboxes = null;\n        this.poolPartyPlanning();\n        this.poolFilter();\n        this.poolView();\n    }\n\n    poolPartyPlanning(method) {\n        let services = this.services;\n\n        //return all checked boxes on window load\n        this.checkboxes = document.querySelectorAll('.check input');\n        this.checkboxes.forEach((chk) => {\n            //if the boxes have the 'checked' property...\n            if (chk.checked == true) {\n                //send them to services array\n                services.push(chk.id);\n            }\n        })\n\n        //return all checked boxes on change\n        this.checkboxes.forEach((chx) => {\n            chx.addEventListener('change', (event) => {\n                //if checked and not already in services...\n                console.log(`${chx.id} changed!`);\n                if (chx.checked === true && services.indexOf(event.target.id) == -1) {\n                    //add to services\n                    services.push(event.target.id);\n                }\n                //else if un-checked and in services...\n                else if (chx.checked === false && services.indexOf(event.target.id) >= 0) {\n                    let num = services.indexOf(event.target.id);\n                    //remove from services\n                    services.splice(num, 1);\n                }\n                //or else it's a weird one.\n                else {\n                    console.log('edge case');\n                }\n            })\n        });\n        this.cards = document.querySelectorAll('.card');\n    }\n\n    poolFilter() {\n        //1. check which boxes are checked and return only the services which are 'true'\n        //2. filter those results down to 3 (create an array, and push/pop the array)\n        let services = this.services;\n        //test services:\n        // let services = [\"Service Pro\", \"Installation Pro\", \"Residential Pro\", \"Commercial Pro\"]\n        // let services = [\"Residential Pro\", \"Installation Pro\", \"Service Pro\"]\n        \n        const dealers = poolDealers.dealers;\n        console.log(dealers);\n\n        //at this point, we have our filtered checks.\n        //now, we need to see what those are and check them against the services the\n        //dealers offer. So, we need to...\n        //1. look at each item in 'services'\n        //2. look at each item in 'certifications' in each dealer\n        //3. return the dealers that contain only the items that services is currently showing\n        \n        //compare two arrays. If the first one has a word from the second, return true\n        let filtered = [];\n        \n        let matchedArrays = (arr1, arr2) => {\n            let match = true\n            arr2.forEach((word) => {\n                if (!arr1.includes(word)) {\n                    match = false\n                } \n            });\n            return match\n        }\n        \n        dealers.forEach((item) => {\n            //passing our two arrays through and pushing them to a new array.\n            if (matchedArrays(item.data.certifications, services) === true){\n                filtered.push(item.data);\n            };\n        })\n        \n        console.log(filtered);\n        console.log(`${filtered.length} result(s)!`);\n        this.filtered = filtered;\n    }\n\n    poolView () {\n        const cards = this.cards;\n        const results = this.filtered;\n        //create an array of only the items we want to render\n        let render = results.slice(0,3);\n        //if I had more time, I would create another array with the leftover results\n        // for updating\n        render.forEach((item, i) => {\n            console.log(item, i);\n\n            //a better method would be to attach querySelectors and update them individually\n            // but this is for show for now\n            cards[i].innerHTML = `\n                <div class=\"card-header\">\n                    <h3>${render[i].name}</h3>\n                </div>\n                <hr>\n                <a href=\"tel:${render[i].phone1}\">\n                    <div class='phone'>\n                        <img class=\"desktop\" src=\"assets/images/phone-icon-desktop.png\">\n                        <img class=\"mobile tel\" src=\"assets/images/phone-icon-mobile.png\">\n                        <span class=\"mobile ttc\">Tap to call</span>\n                        <span class='tel-num'>${render[i].phone1}</span>\n                    </div>\n                </a>\n                <p>Can't talk now? Click below to send an email.</p>\n                <button><img src=\"assets/images/email-icon.png\"><span>Contact this Pro</span></button>\n                <div id=\"hours\">\n                    <h4>Business Hours</h4>\n                    <p>Weekdays 7:00am - 7:00pm</p>\n                    <p>Saturdays 7:00am - 3:00pm</p>\n                    <p>Sundays - CLOSED</p>\n                </div>\n                <footer>\n                    <div class='icon'>\n                        <img src=\"assets/images/star-installation-pro.png\">\n                        <span>Installation Pro</span>\n                    </div>\n                    <div class='icon'>\n                        <img src=\"assets/images/gear-service-pro.png\">\n                        <span>Service Pro</span>\n                    </div>\n                    <div class='icon'>\n                        <img src=\"assets/images/home-residential-pro.png\">\n                        <span>Residential Pro</span>\n                    </div>\n                </footer>\n            `\n        });\n\n    }\n}","import './sass/style.scss';\n\n//Importing JSON (vs fetching) for performance\n// import * as poolDealers from './assets/data/dealers.json';\n\n//Next, I'll need 3 functions:\n//Function 1: enables UI interactivity (click actions, event listeners, etc.)\n//Function 2: performs filtering\n//Function 3: for rendering. It will accept the filtered data as a parameter\n\nimport PoolParty from './assets/scripts/pool-party';\n\nwindow.addEventListener('load', () => {\n    console.log('window loaded');\n    // const items = 'figs';\n\n    const poolParty = new PoolParty();\n\n    // console.log(poolParty);\n})\n\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}